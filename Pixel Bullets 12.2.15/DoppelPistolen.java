import java.awt.*;import javax.swing.*;public class DoppelPistolen extends Waffe{    private boolean links;    public DoppelPistolen(Spieler besitzer){        super(besitzer);        maxCooldown = 300;        reichweite = 55;        schaden=10;        startwerteAnpassen();    }    public void aktivieren(){        if(cooldown<=0){            cooldown=maxCooldown;            benutzt = true;            if(besitzer.getRichtung().equals("HOCH")){                if(!links){                    Objektmanager.add(new ProjektilNormal(besitzer.getX(),besitzer.getY(),1,1,0+besitzer.getXSpeed(),-2+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }else{                    Objektmanager.add(new ProjektilNormal(besitzer.getX()+3,besitzer.getY(),1,1,0+besitzer.getXSpeed(),-2+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }}            else if(besitzer.getRichtung().equals("RUNTER")){                if(!links){                    Objektmanager.add(new ProjektilNormal(besitzer.getX()+3,besitzer.getY(),1,1,0+besitzer.getXSpeed(),2+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }else{                    Objektmanager.add(new ProjektilNormal(besitzer.getX(),besitzer.getY(),1,1,0+besitzer.getXSpeed(),2+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }}            else if(besitzer.getRichtung().equals("LINKS")){                if(!links){                    Objektmanager.add(new ProjektilNormal(besitzer.getX(),besitzer.getY(),1,1,-2+besitzer.getXSpeed(),0+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }else{                    Objektmanager.add(new ProjektilNormal(besitzer.getX(),besitzer.getY()-1,1,1,-2+besitzer.getXSpeed(),0+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }}            else if(besitzer.getRichtung().            equals("RECHTS")){                if(!links){                    Objektmanager.add(new ProjektilNormal(besitzer.getX(),besitzer.getY()-1,1,1,2+besitzer.getXSpeed(),0+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }else{                    Objektmanager.add(new ProjektilNormal(besitzer.getX(),besitzer.getY(),1,1,2+besitzer.getXSpeed(),0+besitzer.getYSpeed(),reichweite,schaden,besitzer));                }}            if(besitzer.getWaffenTyp()=="MG"){                MG.playSound();            }            else if(besitzer.getWaffenTyp()=="Pistole"){                Pistole.playSound();            }            links=!links;        }    }    public void zeichnen(Graphics g, JPanel panel){        g.setColor(Color.BLACK);        if(benutzt){            if(besitzer.getRichtung().equals("HOCH")){                if(links){                    g.fillRect((int)(besitzer.getX()*genauigkeit),(int)((besitzer.getY()-2)*genauigkeit),1*genauigkeit,1*genauigkeit);                }else{                    g.fillRect((int)((besitzer.getX()+3)*genauigkeit),(int)((besitzer.getY()-2)*genauigkeit),1*genauigkeit,1*genauigkeit);                }}            else if(besitzer.getRichtung().equals("RUNTER")){                if(links){                    g.fillRect((int)((besitzer.getX()+3)*genauigkeit),(int)(besitzer.getY()*genauigkeit),1*genauigkeit,2*genauigkeit);                }else{                    g.fillRect((int)(besitzer.getX()*genauigkeit),(int)(besitzer.getY()*genauigkeit),1*genauigkeit,2*genauigkeit);                }}            else if(besitzer.getRichtung().equals("LINKS")){                if(links){                    g.fillRect((int)((besitzer.getX()-1)*genauigkeit),(int)(besitzer.getY()*genauigkeit),2*genauigkeit,1*genauigkeit);                }else{                    g.fillRect((int)((besitzer.getX()-1)*genauigkeit),(int)((besitzer.getY()-1)*genauigkeit),2*genauigkeit,1*genauigkeit);                }}            else if(besitzer.getRichtung().equals("RECHTS")){                if(links){                    g.fillRect((int)((besitzer.getX()+3)*genauigkeit),(int)((besitzer.getY()-1)*genauigkeit),2*genauigkeit,1*genauigkeit);                }else{                    g.fillRect((int)((besitzer.getX()+3)*genauigkeit),(int)(besitzer.getY()*genauigkeit),2*genauigkeit,1*genauigkeit);                }}        }    }    public static void playSound(){         if(Optionsmenue.soundAnAus()==true){            Sound schusssound=new Sound("Schuss.wav");            schusssound.start();        }    }    public String getType(){        return "DoppelPistolen";    }    public Waffe getKopie(Spieler s){        return new DoppelPistolen(s);    }}